#!/bin/bash

# Google Closure Compiler (GCC) Toolkit

# Author: Allex (allex.wxn@gmail.com)
# Last Modified: Wed Nov 21, 2012 01:09PM

COMPILER="$LIB/compiler.jar"
GCC="java -Xms64m -Xmx128m -Djava.library.path=$LIB -jar $COMPILER"

# For more see http://code.google.com/p/closure-compiler/wiki/Warnings
args="--charset UTF-8 --language_in=ECMASCRIPT5_STRICT"

# --warning_level VERBOSE|DEFAULT|QUIET
warning_level="DEFAULT";

usage() {
    $GCC --help;
}

tmpfile=$(mktemp);

while [ $# -gt 0 ]
do
    case $1 in
        -t|--warning_level)
            warning_level=$2;

            case ${warning_level} in
                (QUIET|DEFAULT|VERBOSE)
                    shift;
                    ;;
                (*) warning_level="DEFAULT";
                    if [ "$1" == "-t" ]; then
                        warning_level="VERBOSE";
                    fi
                    ;;
            esac
            ;;

        -h|--help|-\?) usage; exit;;
        (--) shift; break;;

        (*) arg=$1;

            # Handle the un-prefixed arg to filename
            if [ "${arg:0:1}" != "-" ]; then
                filename=${arg};
                if [ -f "$filename" ]; then
                    cp $filename $tmpfile

                    # do some pre-compile syntax parsing
                    perl -0777 -i -pe 's/<debug>[\s\S]*?<\/debug>//g' $tmpfile

                    args="${args} --js $tmpfile";
                fi
            else
                args="${args} $arg $2";
                shift;
            fi

            ;;
    esac
    shift
done

args="${args} --warning_level ${warning_level}"

# filepath
if [ $(expr "${args}" : ".* --js .*") -ne 0 ]; then
    $GCC ${args}

# stdin
elif [ ! -t 0 ]; then
    $GCC ${args} < /dev/stdin

# usage
else
    usage;
fi

rm $tmpfile;
